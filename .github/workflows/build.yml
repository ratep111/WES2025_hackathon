name: ESP-IDF Build and Lint

on:
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install clang-format
      run: sudo apt-get update && sudo apt-get install -y clang-format

    - name: Run clang-format check
      run: |
        INCLUDED_FOLDERS="components main"

        # Define patterns to exclude (space-separated)
        EXCLUDED_PATTERNS=(
          "*/lvgl/*"
          "*/lvgl_esp32_drivers/*"
          "*/gui/*"
        )

        # Build find command with exclusions
        FIND_CMD="find $INCLUDED_FOLDERS -type f \( -name \"*.c\" -o -name \"*.h\" \)"
        for pattern in "${EXCLUDED_PATTERNS[@]}"; do
          FIND_CMD+=" ! -path \"$pattern\""
        done

        # Execute the command and capture files
        FILES=$(eval "$FIND_CMD")

        if [ -z "$FILES" ]; then
          echo "No files found for formatting check"
          exit 0
        fi

        echo "Checking formatting for files:"
        echo "$FILES" | xargs -n 1 echo

        echo "$FILES" | xargs -n 1 clang-format --dry-run --Werror --style=file

  build:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache ESP-IDF
      id: cache-esp-idf
      uses: actions/cache@v3
      with:
        path: |
          ~/esp/esp-idf
          ~/.espressif
        key: esp-idf-5.0.2

    - name: Verify ESP-IDF cache
      run: |
        if [ -f ~/esp/esp-idf/install.sh ]; then
          echo "ESP-IDF exists in cache"
          ls -la ~/esp/esp-idf
        else
          echo "No ESP-IDF cache found"
        fi

    - name: Install ESP-IDF v5.0.2
      if: steps.cache-esp-idf.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget flex bison gperf python3 python3-pip cmake ninja-build ccache libffi-dev libssl-dev dfu-util clang-format
        mkdir -p ~/esp
        cd ~/esp
        git clone --recursive https://github.com/espressif/esp-idf.git
        cd esp-idf
        git checkout v5.0.2
        git submodule update --init --recursive
        ./install.sh all

    - name: Run project_init.sh
      run: |
        chmod +x project_init.sh
        ./project_init.sh

    - name: Build project
      run: |
        . $HOME/esp/esp-idf/export.sh
        idf.py build